% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("S1,S2,S3_5_vs_d5_rep2,d5_rep3 neg.","S1,S2,S3_5_vs_d5_rep2,d5_rep3 pos.");
ngenes=c(230,230);
direction=c("negative","positive");
fdr1=c(0,1);
fdr5=c(1,1);
fdr25=c(1,14);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of S1,S2,S3 5 vs d5 rep2,d5 rep3 neg.}

The following figure shows the distribution of RRA score in the comparison S1,S2,S3 5 vs d5 rep2,d5 rep3 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('spleen_d5.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Esr1","Notch1","Cd79a","Fgf4","Bcor","Asxl2","Rara","Dis3","Erbb2","Ctcf")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='S1,S2,S3_5_vs_d5_rep2,d5_rep3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(922.5256658432277,1651.3341860330752,312.2971955873209,331.7023447197511,1.5803118481059382),c(1908.500149315411,1939.1814294700334,497.8751299939772,1143.7147008862498,749.8579719262676),c(1888.357667528441,3350.6429126389767,859.3366290994795,484.07223085755743,220.45350281077836),c(1465.3655500020702,1335.7122085802703,387.0823333332869,67.09291282611224,559.4303942295021),c(2249.915215604553,1934.1314778307885,623.9019361955125,972.5337176943933,677.1636269133945))
targetgene="Esr1"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2467.4540189038294,2502.2510372458373,5601.268326177026,1358.1612073024216,940.2855496230333),c(561.975241856464,1146.3390221085874,146.1080005962854,332.95641785668784,698.4978368628247),c(2492.632121137542,5145.900720390531,630.8264859868057,2133.178405929288,1749.4052158532736),c(1992.0914487313366,2163.9042774164304,844.7950745377639,901.0515488890027,907.8891567368614),c(1919.5785142982445,2004.8308007802168,998.5200799044717,175.57023917113483,436.9562260012919),c(842.9628627846961,765.0676733455991,426.55226714365784,607.5984348458202,1050.907378990449),c(1749.3745431983477,2009.8807524194617,533.8827889087016,1102.3302873673395,937.1249259268213),c(1219.6272722010358,1441.7611930044127,2085.674397137496,1173.81245617273,2884.069122793337),c(2739.377523027925,2224.503697087369,1124.546886106007,1116.1250918736428,568.1221093940848))
targetgene="Notch1"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1547.9497253286472,2237.128576185481,977.0539755514629,463.3800240981023,151.70993741817006),c(2490.617872958845,4565.15628187737,96.94369707810405,265.8635050305756,351.61938620357125),c(224.5886719247159,222.19787212677466,337.91802981510557,130.42360624141443,110.62182936741567),c(426.0134897944163,290.37221925658054,199.4270339892426,309.12902825489095,678.7439387615004))
targetgene="Cd79a"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1503.6362653973133,1646.2842343938303,114.25507155633692,161.77543466483138,264.70223455774465),c(1843.0370835077583,2403.776980280562,1092.6939570660586,901.678585457471,779.8838970402804),c(987.9887316508803,2227.0286729069912,209.81385867618235,447.7041098863938,802.7984188378166),c(1608.3771706895575,3173.894605265406,547.0394335121586,1485.4496307014942,918.1611837495501),c(2245.886719247159,2244.7035036443485,2546.15695825849,5379.346720889877,3756.401262947815))
targetgene="Fgf4"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(3183.519246430614,4335.383482291728,518.6487793678567,383.1193433341549,792.526391825128),c(2728.2991580450916,5572.621633906723,1389.7571431125345,1028.3399722880754,1001.9177116991648),c(450.1844679387803,580.7444385131611,1320.511645199603,1344.9934393645865,1201.8271604845659),c(1088.7011405857304,595.8942934308957,1007.5219946331528,1425.2541201285337,2586.9704953494206),c(799.6565269427105,459.5455991712839,1328.8211049491547,342.3619663837129,1305.337586535505),c(1538.8856085245109,1517.5104675930859,2055.8988330349353,1282.2897825177527,1210.5188756491486))
targetgene="Bcor"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(959.7892571491222,1696.7837507862791,166.88164997016483,939.3007795655714,106.67104974715083),c(973.8889944000013,1514.9854917734635,264.5178020273982,238.90093258643702,623.4330240777927),c(364.57892034415767,482.2703815478859,121.87207632675938,78.37957105854234,67.16325354450237))
targetgene="Asxl2"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(612.3314463238892,340.8717356490293,640.520855694616,242.66315199724707,488.3163610647349),c(4435.374489490802,5878.143708081038,222.9705032796393,770.0009060791199,963.9902273446223),c(288.03748955367155,201.99806556979513,106.63806678591446,12.540731369366773,0.7901559240529691),c(1457.3085572872822,1931.606502011166,365.61622898027815,158.6402518224897,1091.2053311171503))
targetgene="Rara"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(162.1469783851088,100.99903278489757,20.77364937387944,1.881109705405016,3.9507796202648455),c(369.61454079090015,593.3693176112732,162.72692009538895,678.4535670827424,175.41461513975915),c(1949.7922369786995,3231.969049116722,1054.608933213946,1194.504662932185,2506.374591096018),c(818.791884640332,1068.0647717002919,806.7100506856516,578.1277161278083,521.5029098749596),c(152.07573749162378,320.67192909204977,191.81002921882015,11.913694800898435,125.63479192442209))
targetgene="Dis3"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2684.992822203106,3633.4402044366902,270.05744186043273,623.2743490575286,740.3761008376321),c(615.3528185919346,954.440859817282,97.63615205723336,250.18759081886714,738.0056330654731),c(1641.612265638058,1916.4566470934315,416.1654424567181,150.48877643240127,655.8294169639644),c(1679.8829810333011,2224.503697087369,2679.8007692304477,1534.9855196104932,1838.6928352712591),c(336.3794458423996,401.47115531996786,289.4461812760535,416.35228146297686,365.8421928365247),c(55.3918249141676,7.574927458867318,135.02872093021637,107.22325320808591,182.52601845623585),c(388.7498984885217,136.3486942596117,2109.910321407022,1471.654826195191,848.6274624328888),c(2303.292792340024,2403.776980280562,932.7368568871868,605.7173251404151,722.9926705084667))
targetgene="Erbb2"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2.0142481786970037,30.299709835469272,0.0,0.0,21.334209949430164),c(739.2290815818003,522.669994661845,3556.44877280816,1748.1779528897282,1724.9103822076315),c(19.135357697621536,0.0,0.0,0.0,0.0),c(701.9654902759058,646.3938098233444,603.1282868216331,275.26905355760067,492.26714068499973),c(3133.1630419631892,2827.972917977132,2806.520030411112,1237.7701861565006,2327.799352260047),c(1564.0637107582234,2216.9287696285014,909.8858425759195,1466.638533647444,1197.0862249402483),c(1168.263943644262,1482.1608061183717,353.1520393559505,115.37472859817431,471.72308665962254),c(554.9253732310245,696.8933262157932,366.30868395940746,171.18098319185646,576.8138245586674))
targetgene="Ctcf"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of S1,S2,S3 5 vs d5 rep2,d5 rep3 pos.}

The following figure shows the distribution of RRA score in the comparison S1,S2,S3 5 vs d5 rep2,d5 rep3 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('spleen_d5.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("ST","Ptprd","Fbxw7","Braf","Erg","Cdk12","Pax5","Abl1","Map2k4","Alk")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='S1,S2,S3_5_vs_d5_rep2,d5_rep3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(168.1897229211998,111.09893606338733,239.58942277874286,251.4416639558038,654.2491051158584),c(2.0142481786970037,5.049951639244878,162.03446511625964,571.2303138746565,516.7619743306418),c(35.24934312719756,5.049951639244878,165.4967400119062,239.52796915490538,69.53372131666129),c(262.85938731995896,780.2175282633337,967.3596058436525,674.0643111034641,466.19199519125175),c(911.4473008603942,1330.6622569410254,893.9593780559452,516.678132417911,911.8399363571264),c(273.9377523027925,277.7473401584683,1001.9823548001183,578.7547526962766,563.3811738497669),c(39.277839484591574,10.099903278489757,352.45958437682117,158.6402518224897,240.99755683615558),c(194.37494924426085,70.69932294942829,29.77556410256053,173.68912946572982,162.77212035491164),c(18.12823360827303,5.049951639244878,845.4875295168932,664.0317260079706,662.1506643563881),c(9.064116804136516,2.524975819622439,302.6028258795105,304.7397722756126,214.9224113424076),c(646.5736653617382,320.67192909204977,1263.0378819318698,3121.3880378353897,1228.6924619023669),c(270.916380034747,156.54850081659123,1695.1297889085622,3306.990862102018,1867.9286044612188),c(39.277839484591574,148.97357335772392,319.22174537861406,255.83091993508216,64.0026298482905),c(4.028496357394007,5.049951639244878,560.1960781156156,459.6178046872922,75.85496870908503),c(390.7641466672187,252.4975819622439,704.9191687536423,1274.7653436961325,753.0185956224796),c(499.5335483168569,209.57299302866247,3694.247313654894,2876.2167395642696,666.101443976653),c(100.71240893485019,42.92458893358147,950.0482313654197,758.7142478466898,343.71782696304155),c(75.53430670113764,17.674830737357073,282.52163148476035,760.5953575520948,579.9744482548793),c(193.36782515491234,257.5475336014888,141.9532707215095,185.60282426662823,312.9017459249758),c(230.63141646080692,159.07347663621368,454.2504663088304,920.4896825115212,298.67893929202233),c(352.4934312719756,454.4956475320391,1005.4446296957649,1405.188949937547,1088.0447074209385),c(6.042744536091011,0.0,63.70585807989695,6.897402253151725,13.432650708900475),c(52.3704526461221,20.199806556979514,223.66295825876864,30.724791854948595,41.87826397480736),c(0.0,0.0,9.694369707810406,10.659621663961758,0.0),c(316.23696405542955,310.57202581356,1461.0800059628539,2389.6363624328387,1649.8455694225995),c(434.0704825092043,204.52304138941759,1156.3998151459555,808.8771733241568,446.4380970899275))
targetgene="ST"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(196.38919742295786,40.39961311395903,1794.1508509240543,1117.3791650105795,942.6560173951921),c(100.71240893485019,27.774734015846832,220.20068336312207,504.7644376170126,212.55194357024868),c(41.29208766328858,7.574927458867318,247.20642754916534,503.51036448007596,437.74638192534485),c(0.0,0.0,38.77747883124162,64.58476655223888,14.222806632953443))
targetgene="Ptprd"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(419.9707452583253,260.07250942111125,907.1160226594022,599.4469594557318,689.806121698242),c(273.9377523027925,184.32323483243806,2168.076539653884,3155.8750491011483,2157.9158285886588),c(395.7997671139612,201.99806556979513,1092.0015020869291,647.7287752277938,357.940633595995),c(1152.1499582146862,1608.4095970994938,784.5514913535135,937.4196698601663,417.99248382402067),c(902.3831840562576,979.6906180135064,1752.6035521762954,2341.9815832292447,982.9539695218936),c(2276.100441927614,2244.7035036443485,1020.6786392366098,1035.2373745412272,579.1842923308263),c(394.79264302461274,350.97163892751905,632.2113959450643,1193.877626363717,660.5703525082821),c(816.777636461635,1083.2146266180264,2188.8501890277635,1380.7345237672816,3841.738102745536),c(919.5042935751821,436.820816794682,2051.7441031601593,607.5984348458202,1653.7963490428642),c(464.28420518965936,459.5455991712839,723.6154531901338,1610.2299078266938,338.18673549467076),c(229.6242923714584,75.74927458867317,794.9383160404532,1149.9850665709332,249.68927200073824),c(312.2084676980356,411.57105859845757,672.3737847345645,791.3201494070433,117.7332326838924))
targetgene="Fbxw7"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(201.42481786970038,156.54850081659123,495.10531007746,546.7758877043913,440.9070056215567),c(225.5957960140644,50.49951639244878,1452.7705462133022,2594.050283753517,1009.0291150156415),c(122.86913890051723,42.92458893358147,370.4634138341833,615.7499102359086,437.74638192534485),c(486.4409351553264,330.7718323705395,938.9689516993507,569.3492041692515,1834.7420556509942),c(735.2005852244064,540.344825399202,817.7893303517205,516.678132417911,917.3710278254971),c(251.78102233712545,80.79922622791806,2065.5932027427457,1408.9511693483569,2879.3281872490193),c(3679.024298390077,3635.9651802563126,1419.5327072150951,2216.574269535577,1976.1799660564757),c(575.0678550179946,689.318398756926,621.1321162789952,985.0744490637601,529.4044691154893),c(539.818511890797,358.54656638638636,2181.2331842573412,12797.816362438793,6278.578972524892),c(230.63141646080692,58.074443851316104,1074.6901276086962,535.4892294719613,354.7800098997831),c(273.9377523027925,199.4730897501727,548.4243434704172,216.32761612157685,746.6973482300558))
targetgene="Braf"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(77.54855487983464,98.47405696527512,477.1014806200978,495.98592565845587,230.72552982346699),c(32.22797085915206,0.0,763.0853870005047,379.9841604918132,237.04677721589073),c(90.64116804136516,42.92458893358147,853.1045342873157,1013.9181312133036,1159.1587405857056))
targetgene="Erg"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(155.09710975966928,70.69932294942829,906.4235676802729,2446.069653594989,1339.3142912697826),c(54.3847008248191,37.87463729433659,666.83414490153,174.31616603419815,861.2699572177363))
targetgene="Cdk12"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1190.4206736099293,1749.8082429983504,4693.459848538495,836.4667823367638,6743.980811792091),c(857.0626000355751,790.3174315418235,4775.861991054883,11792.049706615577,4940.054837179163),c(341.41506628914215,68.17434712980585,2544.079593321102,6729.356452802211,4472.282530139805))
targetgene="Pax5"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(21.14960587631854,10.099903278489757,416.1654424567181,155.505068980148,61.632162076131586),c(1.0071240893485018,7.574927458867318,38.77747883124162,283.4205289476891,4.740935544317814),c(1.0071240893485018,0.0,36.700113893853676,186.85689740356491,19.75389810132423))
targetgene="Abl1"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(58.4131971822131,17.674830737357073,1104.4656917112568,356.15677089001633,164.35243220301757),c(84.59842350527416,5.049951639244878,277.6744466308552,643.9665558169838,91.65808719014441),c(160.1327302064118,25.24975819622439,346.91994454378664,1136.1902620646297,300.25925114012824),c(144.01874477683577,35.349661474714146,144.72309063802675,311.6371745287643,200.69960470945415),c(26.18522632306105,12.624879098112196,1094.078867024317,685.9780059043625,349.24891843141233))
targetgene="Map2k4"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(40.284963573940075,40.39961311395903,327.5312051281658,415.0982083260402,681.9045624577124),c(264.873635498656,186.84821065206052,1004.0597197375063,1215.8239062601087,500.16869992552944),c(198.40344560165485,421.67096187694733,333.76329994032966,1185.7261509736284,987.6949050662114))
targetgene="Alk"
collabel=c("d5_rep2","d5_rep3","S1","S2","S3_5")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

